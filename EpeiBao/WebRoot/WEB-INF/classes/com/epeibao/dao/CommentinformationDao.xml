<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.epeibao.dao.CommentinformationDao" >
  <resultMap id="BaseResultMap" type="com.epeibao.po.Commentinformation" >
    <id column="CommentID" property="commentid" jdbcType="VARCHAR" />
    <result column="MessageID" property="messageid" jdbcType="VARCHAR" />
    <result column="UserID" property="userid" jdbcType="VARCHAR" />
    <result column="CommentStatus" property="commentstatus" jdbcType="TINYINT" />
    <result column="CommentTime" property="commenttime" jdbcType="TIMESTAMP" />
    <result column="CommentContent" property="commentcontent" jdbcType="VARCHAR" />
  </resultMap>
 
  <sql id="Base_Column_List" >
    CommentID, MessageID, UserID, CommentStatus, CommentTime,CommentContent
  </sql>
 
  <select id="findById" resultType="com.epeibao.po.Commentinformation" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from CommentInformation
    where CommentID = #{commentid,jdbcType=VARCHAR}
  </select>
  
  
   <select id="findByAll" resultType="java.util.LinkedHashMap"  >
	select top (15)co.*,um.UserName from CommentInformation co,UserMessage um
	 where co.MessageID  IN (select RecordID from MessageProcess where MessageID=#{messageid,jdbcType=VARCHAR}) 
	  and co.UserID=um.UserID and co.CommentStatus &lt;&gt; 2 and co.CommentID not in(
	 select top (15*#{page})co.CommentID from CommentInformation co,UserMessage um
	 where co.MessageID  IN (select RecordID from MessageProcess where MessageID=#{messageid,jdbcType=VARCHAR}) and co.UserID=um.UserID and co.CommentStatus &lt;&gt; 2
	 )
	 order by CommentTime asc
  </select>
  
     <select id="findByAllCount" resultType="int"  >
	select count(*) from CommentInformation co,UserMessage um
	 where co.MessageID  IN (select RecordID from MessageProcess where MessageID=#{messageid,jdbcType=VARCHAR}) 
	  and co.UserID=um.UserID and co.CommentStatus &lt;&gt; 2
 	 </select>
  
  <select id="findByMessageId" resultType="java.util.LinkedHashMap"  >
    select top 15  c.*,u.UserName
    from CommentInformation c,UserMessage u WHERE MessageID=#{messageid,jdbcType=VARCHAR} AND c.UserID=u.UserID and c.CommentStatus &lt;&gt; 2  AND CommentID not in
    (select top (#{page}*15) CommentID from CommentInformation c,UserMessage u WHERE MessageID=#{messageid,jdbcType=VARCHAR} AND c.UserID=u.UserID and c.CommentStatus &lt;&gt; 2  order by CommentTime desc )
    order by CommentTime desc
  </select>
  
  <delete id="deleteCommentinformation" parameterType="java.lang.String" >
    delete from CommentInformation
    where CommentID = #{commentid,jdbcType=VARCHAR}
  </delete>
  
  <insert id="insertCommentinformation" parameterType="com.epeibao.po.Commentinformation" >
    insert into CommentInformation (CommentID, MessageID, UserID, 
       CommentStatus, CommentTime,CommentContent) 
    values (#{commentid,jdbcType=VARCHAR}, #{messageid,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, 
      #{commentstatus,jdbcType=TINYINT}, #{commenttime,jdbcType=TIMESTAMP},#{commentcontent,jdbcType=VARCHAR})
  </insert>
 
  <update id="updateCommentinformation" parameterType="com.epeibao.po.Commentinformation" >
    update CommentInformation
    set MessageID = #{messageid,jdbcType=VARCHAR},
      UserID = #{userid,jdbcType=VARCHAR},
      CommentStatus = #{commentstatus,jdbcType=TINYINT},
      CommentTime = #{commenttime,jdbcType=TIMESTAMP},
      CommentContent = #{commentcontent,jdbcType=VARCHAR}
    where CommentID = #{commentid,jdbcType=VARCHAR}
  </update>
</mapper>